<launch>
  <!-- DEFINITION OF ARGUMENTS -->
  <!-- sllidar -->
  <arg name="channel_type" default="serial" description="Specifying channel type of lidar"/>
  <arg name="serial_port" default="/dev/ttyUSB0" description="Specifying usb port to connected lidar"/>
  <arg name="serial_baudrate" default="115200" description="Specifying usb port baudrate to connected lidar"/>
  <arg name="frame_id" default="laser" description="Specifying frame_id of lidar"/>
  <arg name="inverted" default="false" description="Specifying whether or not to invert scan data"/>
  <arg name="angle_compensate" default="true" description="Specifying whether or not to enable angle_compensate of scan data"/>
  <arg name="scan_mode" default="Sensitivity" description="Specifying scan mode of lidar"/>

  <!-- lidar_rotation_motor -->
  <arg name="angleIncrement" default="1.00"/>
  <arg name="motorFakeMode" default="false"/>
  <arg name="pwmFrequency" default="50"/>
  <arg name="angleRange" default="180.0"/>
  <arg name="sweepsPerScan" default="1"/>

  <!-- point_cloud_transformer -->
  <arg name="appendMode" default="false" description="Append mode of PointCloud2 in point_cloud_transformer. Otherwise it sends buffers of updateBuffer PointClouds2."/>
  <arg name="processingType" default="0"/>
  <arg name="updateBuffer" default="50"/>
  <arg name="samplesPerAngle" default="2"/>
  <arg name="pcdExportPath" default="/tmp/"/>
  
  <!-- keyboard -->
  <arg name="allowRepeat" default="false"/>
  <arg name="repeatDelay" default="30"/>
  <arg name="repeatInterval" default="500"/>

  <!-- keyboard_to_joy -->
  <arg name="configFileName" default="$(find-pkg-share keyboard)/config/3d_lidar_config.yaml" description="Path to the keyboard to joy configuration file"/>
  <arg name="samplingFrequency" default="100" description="Sampling frequency for the keyboard_to_joy node"/>


  <!-- NODE INITIALIZATION -->
  <!-- sllidar -->
  <node pkg="sllidar_ros2" exec="sllidar_node" name="sllidar_node" output="screen">
    <param name="channel_type" value="$(var channel_type)"/>
    <param name="serial_port" value="$(var serial_port)"/>
    <param name="serial_baudrate" value="$(var serial_baudrate)"/>
    <param name="frame_id" value="$(var frame_id)"/>
    <param name="inverted" value="$(var inverted)"/>
    <param name="angle_compensate" value="$(var angle_compensate)"/>
    <param name="scan_mode" value="$(var scan_mode)"/>
  </node>

  <!-- rviz -->
  <node pkg="rviz2" exec="rviz2" name="rviz2" output="screen" args="-d $(find-pkg-share lidar_pointcloud_scan)/rviz/sllidar_ros2.rviz" />

  <!-- lidar_rotation_motor -->
  <node pkg="lidar_pointcloud_scan" exec="lidar_rotation_motor" name="lidar_rotation_motor" output="screen">
    <param name="angleIncrement" value="$(var angleIncrement)"/>
    <param name="motorFakeMode" value="$(var motorFakeMode)"/>
    <param name="pwmFrequency" value="$(var pwmFrequency)"/>
    <param name="angleRange" value="$(var angleRange)"/>
    <param name="sweepsPerScan" value="$(var sweepsPerScan)"/>
  </node>

  <!-- point_cloud_transformer -->
  <node pkg="lidar_pointcloud_scan" exec="point_cloud_transformer" name="point_cloud_transformer" output="screen">
    <param name="appendMode" value="$(var appendMode)"/>
    <param name="processingType" value="$(var processingType)"/>
    <param name="updateBuffer" value="$(var updateBuffer)"/>
    <param name="samplesPerAngle" value="$(var samplesPerAngle)"/>
    <param name="pcdExportPath" value="$(var pcdExportPath)"/>
  </node>

    <!-- device_orchestrator -->
  <node pkg="lidar_pointcloud_scan" exec="device_orchestrator" name="device_orchestrator" output="screen"/>

  <!-- keyboard -->
  <node pkg="keyboard" exec="keyboard" name="keyboard_node" output="screen">
    <param name="allow_repeat" value="$(var allowRepeat)"/>
    <param name="repeat_delay" value="$(var repeatDelay)"/>
    <param name="repeat_interval" value="$(var repeatInterval)"/>
  </node>

  <!-- keyboard_to_joy -->
  <node pkg="keyboard" exec="keyboard_to_joy.py" name="keyboard_to_joy_node" output="screen">
    <param name="config_file_name" value="$(var configFileName)"/>
    <param name="sampling_frequency" value="$(var samplingFrequency)"/>
  </node>

</launch>